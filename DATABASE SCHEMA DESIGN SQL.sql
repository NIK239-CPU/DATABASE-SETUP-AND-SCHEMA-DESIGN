--CREATE DATABSE 
CREATE DATABASE Librarydb;
GO

----USE DATABASE
USE Librarydb;
GO

---CREATE TABLE
-- CREATE AUTHORS TABLE
CREATE TABLE AUTHORS (
    AUTHORID INT PRIMARY KEY,
	NAME NVARCHAR(100) NOT NULL,
	COUNTRY NVARCHAR(50)
	);
	GO

-- CREATE BOOK TABLE
CREATE TABLE BOOK (
    BOOKID INT PRIMARY KEY,
	TITLE NVARCHAR(150) NOT NULL,
	GENRE NVARCHAR(50),
	AUTHORID INT FOREIGN KEY REFERENCES AUTHORS(AUTHORID),
	PUBLISHEDYEAR INT,
	ISBN NVARCHAR (20) UNIQUE
	);
	GO

-- CREATE MEMBERS TABLE
CREATE TABLE MEMBERS (
     MEMBERID INT PRIMARY KEY,
	 FULLNAME NVARCHAR(100),
	 EMAIL NVARCHAR(100) UNIQUE,
	 JOINDATE DATE DEFAULT GETDATE()
	 );
	 GO

-- CREATE LENDING TABLE
CREATE TABLE LENDING (
     LENDINGID INT PRIMARY KEY,
	 BOOKID INT FOREIGN KEY REFERENCES BOOK(BOOKID),
	 MEMBERID INT FOREIGN KEY REFERENCES MEMBERS(MEMBERID),
	 ISSUEDATE DATE NOT NULL,
	 RETURNDATE DATE
	 );
	 GO

ðŸ”¶ Entities and Relationships
1. AUTHORS
Primary Key: AUTHORID
Attributes: NAME, COUNTRY

2. BOOK
Primary Key: BOOKID
Attributes: TITLE, GENRE, PUBLISHEDYEAR, ISBN
Foreign Key: AUTHORID â†’ AUTHORS(AUTHORID)

3. MEMBERS
Primary Key: MEMBERID
Attributes: FULLNAME, EMAIL, JOINDATE

4. LENDING
Primary Key: LENDINGID
Attributes: ISSUEDATE, RETURNDATE

Foreign Keys:
BOOKID â†’ BOOK(BOOKID)
MEMBERID â†’ MEMBERS(MEMBERID)

ðŸ”— Relationships
AUTHORS â†’ BOOK: One-to-Many (One author can write many books)
BOOK â†’ LENDING: One-to-Many (One book can be lent many times)
MEMBERS â†’ LENDING: One-to-Many (One member can borrow many books)




